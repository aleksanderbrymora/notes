{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/App/index.js","serviceWorker.js","index.js","components/Resources/loader.gif"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","app","initializeApp","this","database","type","onClick","HOME","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","JSON","parse","localStorage","getItem","listener","onAuthStateChanged","setState","setItem","stringify","id","removeItem","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","className","to","ROUTES","SignOut","NavigationNonAuth","Navigation","App","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","e","then","set","catch","preventDefault","onChange","target","name","isInvalid","placeholder","disabled","message","SignUpForm","SignUpLink","SignUpPage","PasswordForgetFormBase","event","PasswordForgetLink","PasswordForgetForm","PasswordForgetPage","SignInFormBase","autoFocus","SignInForm","SignInPage","isFetchDone","title","input","parsed","HomePage","onChangeTitle","onChangeInput","Markdown","render","dangerouslySetInnerHTML","__html","src","loader","alt","PasswordChangeForm","split","PasswordChange","exact","path","component","LandingPage","AccountPage","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.fff528c4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n\t<FirebaseContext.Consumer>\r\n\t\t{firebase => <Component {...props} firebase={firebase} />}\r\n\t</FirebaseContext.Consumer>\r\n);\r\n\r\nexport default FirebaseContext;\r\n","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAkzU0nhZD6uRCHaMfTCXkcDyexkuSRErQ\",\r\n  authDomain: \"notes-d5887.firebaseapp.com\",\r\n  databaseURL: \"https://notes-d5887.firebaseio.com\",\r\n  projectId: \"notes-d5887\",\r\n  storageBucket: \"notes-d5887.appspot.com\",\r\n  messagingSenderId: \"651876624694\",\r\n  appId: \"1:651876624694:web:04c501c12f1c8f524b2b97\",\r\n  measurementId: \"G-DN7T1WBZHF\"\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n  }\r\n\r\n  // AUTHORIZATION\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from \"./context\";\r\nimport Firebase from \"./firebase\";\r\n\r\nexport default Firebase;\r\nexport { FirebaseContext, withFirebase };\r\n","import React from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n\t<button type=\"button\" onClick={firebase.doSignOut}>\r\n\t\tSign out\r\n\t</button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);\r\n","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\r\nconst AuthUserContext = React.createContext(null);\r\nexport default AuthUserContext;\r\n","import React from \"react\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        authUser: JSON.parse(localStorage.getItem(\"authUser\"))\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n        if (authUser) {\r\n          this.setState({ authUser });\r\n          localStorage.setItem(\r\n            \"authUser\",\r\n            JSON.stringify({\r\n              id: authUser.uid,\r\n              email: authUser.email\r\n            })\r\n          );\r\n        } else {\r\n          this.setState({ authUser: null });\r\n          localStorage.removeItem(\"authUser\");\r\n        }\r\n      });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n\tclass WithAuthorization extends React.Component {\r\n\t\tcomponentDidMount() {\r\n\t\t\tthis.listener = this.props.firebase.auth.onAuthStateChanged(\r\n\t\t\t\tauthUser => {\r\n\t\t\t\t\tif (!condition(authUser)) {\r\n\t\t\t\t\t\tthis.props.history.push(ROUTES.SIGN_IN);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tcomponentWillUnmount() {\r\n\t\t\tthis.listener();\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t\treturn (\r\n\t\t\t\t<AuthUserContext.Consumer>\r\n\t\t\t\t\t{authUser =>\r\n\t\t\t\t\t\tcondition(authUser) ? (\r\n\t\t\t\t\t\t\t<Component {...this.props} />\r\n\t\t\t\t\t\t) : null\r\n\t\t\t\t\t}\r\n\t\t\t\t</AuthUserContext.Consumer>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn compose(withRouter, withFirebase)(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { AuthUserContext } from '../Session';\r\n\r\nconst Navigation = () => (\r\n\t<div className={'navigation'}>\r\n\t\t<h1>NotAble</h1>\r\n\t\t<AuthUserContext.Consumer>\r\n\t\t\t{authUser =>\r\n\t\t\t\tauthUser ? <NavigationAuth /> : <NavigationNonAuth />\r\n\t\t\t}\r\n\t\t</AuthUserContext.Consumer>\r\n\t</div>\r\n);\r\n\r\nclass NavigationAuth extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<ul>\r\n\t\t\t\t<div className=\"basic-nav\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={ROUTES.HOME}>Home</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<Link to={ROUTES.ACCOUNT}>Account</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"user-nav\">\r\n\t\t\t\t\t<li>\r\n\t\t\t\t\t\t<SignOutButton />\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</div>\r\n\t\t\t</ul>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst NavigationNonAuth = () => (\r\n\t<ul>\r\n\t\t<div className=\"basic-nav\">\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={ROUTES.LANDING}>Discover the app</Link>\r\n\t\t\t</li>\r\n\t\t</div>\r\n\t\t<div className=\"user-nav\">\r\n\t\t\t<li>\r\n\t\t\t\t<Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n\t\t\t</li>\r\n\t\t</div>\r\n\t</ul>\r\n);\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nconst App = () => (\r\n    <div>\r\n        <h1>App</h1>\r\n    </div>\r\n);\r\nexport default App;","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { withFirebase } from \"../Firebase\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nconst SignUpPage = () => (\r\n  <>\r\n    <h1>Sign Up</h1>\r\n    <SignUpForm />\r\n  </>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: \"\",\r\n  email: \"\",\r\n  passwordOne: \"\",\r\n  passwordTwo: \"\",\r\n  error: null\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = e => {\r\n    const { username, email, passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        return this.props.firebase.user(authUser.user.uid).set({\r\n          username,\r\n          email\r\n        });\r\n      })\r\n      .then(authUser => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n    e.preventDefault();\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { username, email, passwordOne, passwordTwo, error } = this.state;\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === \"\" ||\r\n      email === \"\" ||\r\n      username === \"\";\r\n\r\n    return (\r\n      <div className={\"form-input\"}>\r\n        <form onSubmit={this.onSubmit}>\r\n          <input\r\n            name=\"username\"\r\n            value={username}\r\n            onChange={this.onChange}\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n          />\r\n          <input\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.onChange}\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n          />\r\n          <input\r\n            name=\"passwordOne\"\r\n            value={passwordOne}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n          <input\r\n            name=\"passwordTwo\"\r\n            value={passwordTwo}\r\n            onChange={this.onChange}\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n          />\r\n          <button disabled={isInvalid} type=\"submit\">\r\n            Sign Up\r\n          </button>\r\n          {error && <p>{error.message}</p>}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpForm = compose(withRouter, withFirebase)(SignUpFormBase);\r\n\r\nconst SignUpLink = () => (\r\n  <p className={\"misc\"}>\r\n    Don't have an account? <Link to={ROUTES.SIGN_UP}>Sign Up</Link>\r\n  </p>\r\n);\r\n\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst PasswordForgetPage = () => (\r\n\t<div>\r\n\t\t<h1>Forgot Password</h1>\r\n\t\t<PasswordForgetForm />\r\n\t</div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n\temail: '',\r\n\terror: null\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { ...INITIAL_STATE };\r\n\t}\r\n\r\n\tonSubmit = event => {\r\n\t\tconst { email } = this.state;\r\n\t\tthis.props.firebase\r\n\t\t\t.doPasswordReset(email)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.setState({ ...INITIAL_STATE });\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tthis.setState({ error });\r\n\t\t\t});\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n\tonChange = event => {\r\n\t\tthis.setState({ [event.target.name]: event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { email, error } = this.state;\r\n\t\tconst isInvalid = email === '';\r\n\r\n\t\treturn (\r\n\t\t\t<div className={'form-input'}>\r\n\t\t\t\t<h5>Forgot your password?</h5>\r\n\t\t\t\t<form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<button disabled={isInvalid} type=\"submit\">\r\n\t\t\t\t\t\tReset My Password\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t{error && <p>{error.message}</p>}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n\t<p className={'misc'}>\r\n\t\t<Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n\t</p>\r\n);\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport default PasswordForgetPage;\r\nexport { PasswordForgetForm, PasswordForgetLink };\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\nimport { SignUpLink } from '../SignUp';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst SignInPage = () => (\r\n\t<>\r\n\t\t<h1>Sing In</h1>\r\n\t\t<SignInForm />\r\n\t\t<PasswordForgetLink />\r\n\t\t<SignUpLink />\r\n\t</>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n\temail: '',\r\n\tpassword: '',\r\n\terror: null\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { ...INITIAL_STATE };\r\n\t}\r\n\r\n\tonSubmit = e => {\r\n\t\tconst { email, password } = this.state;\r\n\r\n\t\tthis.props.firebase\r\n\t\t\t.doSignInWithEmailAndPassword(email, password)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.setState({ ...INITIAL_STATE });\r\n\t\t\t\tthis.props.history.push(ROUTES.HOME);\r\n\t\t\t})\r\n\t\t\t.catch(error => this.setState({ error }));\r\n\t\te.preventDefault();\r\n\t};\r\n\r\n\tonChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n\trender() {\r\n\t\tconst { email, password, error } = this.state;\r\n\r\n\t\tconst isInvalid = password === '' || email === '';\r\n\r\n\t\treturn (\r\n\t\t\t<div className={'form-input'}>\r\n\t\t\t\t<form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button disabled={isInvalid} type=\"submit\">\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{error && <p>{error.message}</p>}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst SignInForm = compose(withRouter, withFirebase)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };\r\n","import React, { Component } from \"react\";\nimport { withAuthorization } from \"../Session\";\nimport loader from \"../Resources/loader.gif\";\nimport Markdown from \"markdown-it\";\n\nconst INITIAL_STATE = {\n  isFetchDone: false,\n  title: \"\",\n  input: \"\",\n  parsed: \"\"\n};\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { ...INITIAL_STATE };\n  }\n\n  async componentDidMount() {\n    this.setState({ isFetchDone: true });\n  }\n\n  onChangeTitle = e => this.setState({ title: e.target.value });\n\n  onChangeInput = e => {\n    const md = new Markdown();\n    const parsed = md.render(e.target.value);\n    this.setState({\n      parsed: parsed,\n      input: e.target.value\n    });\n  };\n\n  render() {\n    if (this.state.isFetchDone) {\n      return (\n        <div className={\"page\"}>\n          <div className=\"left\">\n            <input\n              placeholder={\"Title\"}\n              autoFocus\n              name={\"title\"}\n              value={this.state.title}\n              className={\"title\"}\n              onChange={this.onChangeTitle}\n            />\n            <textarea\n              placeholder={\"Your note...\"}\n              name={\"input\"}\n              value={this.state.input}\n              className={\"user-input\"}\n              onChange={this.onChangeInput}\n            />\n          </div>\n          <div className=\"right\">\n            <h1>{this.state.title}</h1>\n            <div dangerouslySetInnerHTML={{ __html: this.state.parsed }} />\n          </div>\n        </div>\n      );\n    } else return <img src={loader} className={\"loader\"} alt={\"loading\"} />;\n  }\n}\n\nconst condition = authUser => !!authUser;\nexport default withAuthorization(condition)(HomePage);\n","import React, { Component } from 'react';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n\tpasswordOne: '',\r\n\tpasswordTwo: '',\r\n\terror: null\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { ...INITIAL_STATE };\r\n\t}\r\n\r\n\tonSubmit = event => {\r\n\t\tconst { passwordOne } = this.state;\r\n\t\tthis.props.firebase\r\n\t\t\t.doPasswordUpdate(passwordOne)\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.setState({ ...INITIAL_STATE });\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tthis.setState({ error });\r\n\t\t\t});\r\n\t\tevent.preventDefault();\r\n\t};\r\n\r\n\tonChange = event => {\r\n\t\tthis.setState({ [event.target.name]: event.target.value });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { passwordOne, passwordTwo, error } = this.state;\r\n\t\tconst isInvalid = passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n\t\treturn (\r\n\t\t\t<div className={'form-input'}>\r\n\t\t\t\t<h5>Want to change your password?</h5>\r\n\t\t\t\t<form onSubmit={this.onSubmit}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"passwordOne\"\r\n\t\t\t\t\t\tvalue={passwordOne}\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"New Password\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"passwordTwo\"\r\n\t\t\t\t\t\tvalue={passwordTwo}\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tplaceholder=\"Confirm New Password\"\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<button disabled={isInvalid} type=\"submit\">\r\n\t\t\t\t\t\tReset My Password\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t{error && <p>{error.message}</p>}\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);\r\n","import React from 'react';\r\n\r\nimport { AuthUserContext, withAuthorization } from '../Session';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\n\r\nconst AccountPage = () => (\r\n\t<AuthUserContext.Consumer>\r\n\t\t{authUser => (\r\n\t\t\t<>\r\n\t\t\t\t<h1>Hi {authUser.email.split('@')[0]}!</h1>\r\n\t\t\t\t<hr />\r\n\t\t\t\t<h3 id={'manage-account-title'}>Manage your account</h3>\r\n\t\t\t\t<PasswordForgetForm />\r\n\t\t\t\t<PasswordChangeForm />\r\n\t\t\t</>\r\n\t\t)}\r\n\t</AuthUserContext.Consumer>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(AccountPage);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport '../../style/style.css';\r\n\r\nimport Navigation from '../Navigation/index';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\nconst App = () => (\r\n\t<Router>\r\n\t\t<div className=\"container\">\r\n\t\t\t<Navigation className={'navigation'} />\r\n\t\t\t<div>\r\n\t\t\t\t<Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n\t\t\t\t<Route className={'form-input'} path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n\t\t\t\t<Route className={'form-input'} path={ROUTES.SIGN_IN} component={SignInPage} />\r\n\t\t\t\t<Route\r\n\t\t\t\t\tclassName={'form-input'}\r\n\t\t\t\t\tpath={ROUTES.PASSWORD_FORGET}\r\n\t\t\t\t\tcomponent={PasswordForgetPage}\r\n\t\t\t\t/>\r\n\t\t\t\t<Route path={ROUTES.HOME} component={HomePage} />\r\n\t\t\t\t<Route path={ROUTES.ACCOUNT} component={AccountPage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/index';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Firebase, {FirebaseContext} from \"./components/Firebase\";\r\n\r\nReactDOM.render(\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n        <App />\r\n    </FirebaseContext.Provider>,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/loader.dde0ed76.gif\";"],"sourceRoot":""}